{"version":3,"file":"static/js/247.b836a97d.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","helpers/getMoviesData.js"],"sourcesContent":["import { Loader } from 'components/Loader/Loader';\nimport { fetchActorsOfMovie } from 'helpers/getMoviesData';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getActors(movieId);\n  }, [movieId]);\n\n  const getActors = async movieId => {\n    setIsLoading(true);\n    try {\n      const data = await fetchActorsOfMovie(movieId);\n      const { cast } = data;\n      setActors(prevState => [...prevState, ...cast]);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div>\n      {isLoading && !actors.length && <Loader />}\n      {actors.length ? (\n        <ul>\n          {actors.map(({ profile_path, name, character, id }) => (\n            <li key={id}>\n              {profile_path ? (\n                <img\n                  width=\"70\"\n                  src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                  alt={name}\n                />\n              ) : (\n                <img\n                  width=\"70\"\n                  src={`https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`}\n                  alt={name}\n                />\n              )}\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : null}\n\n      {!actors.length && !isLoading && `We do not have Casts for this films`}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7223fe1feb6bb4929f794ea7615387c2';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&include_adult=false&page=1`\n  );\n  return data;\n};\n\nexport const fetchFullInformationMovie = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchActorsOfMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchReviewsOfMovie = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","isLoading","setIsLoading","useEffect","getActors","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","cast","_context","prev","next","fetchActorsOfMovie","sent","prevState","concat","_toConsumableArray","t0","console","log","finish","stop","_x","apply","arguments","_jsxs","children","length","_jsx","Loader","map","_ref2","profile_path","name","character","id","width","src","alt","axios","API_KEY","fetchTrendingMovies","_yield$axios$get","abrupt","fetchSearchMovies","_callee2","query","_yield$axios$get2","_context2","fetchFullInformationMovie","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchReviewsOfMovie","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}